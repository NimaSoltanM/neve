/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestUploadRouteImport } from './routes/test-upload'
import { Route as rootRouteRouteImport } from './routes/(root)/route'
import { Route as CheckoutIndexRouteImport } from './routes/checkout/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as rootIndexRouteImport } from './routes/(root)/index'
import { Route as rootmarketplaceRouteRouteImport } from './routes/(root)/(marketplace)/route'
import { Route as dashboardsShopRouteRouteImport } from './routes/(dashboards)/shop/route'
import { Route as dashboardsDashboardRouteRouteImport } from './routes/(dashboards)/dashboard/route'
import { Route as dashboardsShopIndexRouteImport } from './routes/(dashboards)/shop/index'
import { Route as dashboardsDashboardIndexRouteImport } from './routes/(dashboards)/dashboard/index'
import { Route as rootmarketplaceShopsIndexRouteImport } from './routes/(root)/(marketplace)/shops/index'
import { Route as rootmarketplaceMarketplaceIndexRouteImport } from './routes/(root)/(marketplace)/marketplace/index'
import { Route as rootmarketplaceCategoriesIndexRouteImport } from './routes/(root)/(marketplace)/categories/index'
import { Route as dashboardsShopSettingsIndexRouteImport } from './routes/(dashboards)/shop/settings/index'
import { Route as dashboardsShopProductsIndexRouteImport } from './routes/(dashboards)/shop/products/index'
import { Route as dashboardsShopOrdersIndexRouteImport } from './routes/(dashboards)/shop/orders/index'
import { Route as dashboardsShopEditIndexRouteImport } from './routes/(dashboards)/shop/edit/index'
import { Route as dashboardsShopAuctionsIndexRouteImport } from './routes/(dashboards)/shop/auctions/index'
import { Route as dashboardsShopAnalyticsIndexRouteImport } from './routes/(dashboards)/shop/analytics/index'
import { Route as dashboardsDashboardShopSetupIndexRouteImport } from './routes/(dashboards)/dashboard/shop-setup/index'
import { Route as dashboardsDashboardOrdersIndexRouteImport } from './routes/(dashboards)/dashboard/orders/index'
import { Route as dashboardsDashboardNotificationsIndexRouteImport } from './routes/(dashboards)/dashboard/notifications/index'
import { Route as dashboardsDashboardBidsIndexRouteImport } from './routes/(dashboards)/dashboard/bids/index'
import { Route as rootmarketplaceShopsSlugRouteImport } from './routes/(root)/(marketplace)/shops/$slug'
import { Route as rootmarketplaceCategoriesSlugRouteImport } from './routes/(root)/(marketplace)/categories/$slug'
import { Route as rootmarketplaceProductsProductSlugIndexRouteImport } from './routes/(root)/(marketplace)/products/$productSlug/index'
import { Route as dashboardsShopProductsNewIndexRouteImport } from './routes/(dashboards)/shop/products/new/index'
import { Route as dashboardsDashboardOrdersOrderIdIndexRouteImport } from './routes/(dashboards)/dashboard/orders/$orderId/index'
import { Route as dashboardsShopProductsProductIdEditRouteImport } from './routes/(dashboards)/shop/products/$productId.edit'
import { Route as dashboardsDashboardOrdersOrderIdSuccessRouteImport } from './routes/(dashboards)/dashboard/orders/$orderId/success'

const TestUploadRoute = TestUploadRouteImport.update({
  id: '/test-upload',
  path: '/test-upload',
  getParentRoute: () => rootRouteImport,
} as any)
const rootRouteRoute = rootRouteRouteImport.update({
  id: '/(root)',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutIndexRoute = CheckoutIndexRouteImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const rootIndexRoute = rootIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteRoute,
} as any)
const rootmarketplaceRouteRoute = rootmarketplaceRouteRouteImport.update({
  id: '/(marketplace)',
  getParentRoute: () => rootRouteRoute,
} as any)
const dashboardsShopRouteRoute = dashboardsShopRouteRouteImport.update({
  id: '/(dashboards)/shop',
  path: '/shop',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardsDashboardRouteRoute =
  dashboardsDashboardRouteRouteImport.update({
    id: '/(dashboards)/dashboard',
    path: '/dashboard',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardsShopIndexRoute = dashboardsShopIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardsShopRouteRoute,
} as any)
const dashboardsDashboardIndexRoute =
  dashboardsDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)
const rootmarketplaceShopsIndexRoute =
  rootmarketplaceShopsIndexRouteImport.update({
    id: '/shops/',
    path: '/shops/',
    getParentRoute: () => rootmarketplaceRouteRoute,
  } as any)
const rootmarketplaceMarketplaceIndexRoute =
  rootmarketplaceMarketplaceIndexRouteImport.update({
    id: '/marketplace/',
    path: '/marketplace/',
    getParentRoute: () => rootmarketplaceRouteRoute,
  } as any)
const rootmarketplaceCategoriesIndexRoute =
  rootmarketplaceCategoriesIndexRouteImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => rootmarketplaceRouteRoute,
  } as any)
const dashboardsShopSettingsIndexRoute =
  dashboardsShopSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsShopProductsIndexRoute =
  dashboardsShopProductsIndexRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsShopOrdersIndexRoute =
  dashboardsShopOrdersIndexRouteImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsShopEditIndexRoute = dashboardsShopEditIndexRouteImport.update({
  id: '/edit/',
  path: '/edit/',
  getParentRoute: () => dashboardsShopRouteRoute,
} as any)
const dashboardsShopAuctionsIndexRoute =
  dashboardsShopAuctionsIndexRouteImport.update({
    id: '/auctions/',
    path: '/auctions/',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsShopAnalyticsIndexRoute =
  dashboardsShopAnalyticsIndexRouteImport.update({
    id: '/analytics/',
    path: '/analytics/',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsDashboardShopSetupIndexRoute =
  dashboardsDashboardShopSetupIndexRouteImport.update({
    id: '/shop-setup/',
    path: '/shop-setup/',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)
const dashboardsDashboardOrdersIndexRoute =
  dashboardsDashboardOrdersIndexRouteImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)
const dashboardsDashboardNotificationsIndexRoute =
  dashboardsDashboardNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)
const dashboardsDashboardBidsIndexRoute =
  dashboardsDashboardBidsIndexRouteImport.update({
    id: '/bids/',
    path: '/bids/',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)
const rootmarketplaceShopsSlugRoute =
  rootmarketplaceShopsSlugRouteImport.update({
    id: '/shops/$slug',
    path: '/shops/$slug',
    getParentRoute: () => rootmarketplaceRouteRoute,
  } as any)
const rootmarketplaceCategoriesSlugRoute =
  rootmarketplaceCategoriesSlugRouteImport.update({
    id: '/categories/$slug',
    path: '/categories/$slug',
    getParentRoute: () => rootmarketplaceRouteRoute,
  } as any)
const rootmarketplaceProductsProductSlugIndexRoute =
  rootmarketplaceProductsProductSlugIndexRouteImport.update({
    id: '/products/$productSlug/',
    path: '/products/$productSlug/',
    getParentRoute: () => rootmarketplaceRouteRoute,
  } as any)
const dashboardsShopProductsNewIndexRoute =
  dashboardsShopProductsNewIndexRouteImport.update({
    id: '/products/new/',
    path: '/products/new/',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsDashboardOrdersOrderIdIndexRoute =
  dashboardsDashboardOrdersOrderIdIndexRouteImport.update({
    id: '/orders/$orderId/',
    path: '/orders/$orderId/',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)
const dashboardsShopProductsProductIdEditRoute =
  dashboardsShopProductsProductIdEditRouteImport.update({
    id: '/products/$productId/edit',
    path: '/products/$productId/edit',
    getParentRoute: () => dashboardsShopRouteRoute,
  } as any)
const dashboardsDashboardOrdersOrderIdSuccessRoute =
  dashboardsDashboardOrdersOrderIdSuccessRouteImport.update({
    id: '/orders/$orderId/success',
    path: '/orders/$orderId/success',
    getParentRoute: () => dashboardsDashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof rootIndexRoute
  '/test-upload': typeof TestUploadRoute
  '/dashboard': typeof dashboardsDashboardRouteRouteWithChildren
  '/shop': typeof dashboardsShopRouteRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/checkout': typeof CheckoutIndexRoute
  '/dashboard/': typeof dashboardsDashboardIndexRoute
  '/shop/': typeof dashboardsShopIndexRoute
  '/categories/$slug': typeof rootmarketplaceCategoriesSlugRoute
  '/shops/$slug': typeof rootmarketplaceShopsSlugRoute
  '/dashboard/bids': typeof dashboardsDashboardBidsIndexRoute
  '/dashboard/notifications': typeof dashboardsDashboardNotificationsIndexRoute
  '/dashboard/orders': typeof dashboardsDashboardOrdersIndexRoute
  '/dashboard/shop-setup': typeof dashboardsDashboardShopSetupIndexRoute
  '/shop/analytics': typeof dashboardsShopAnalyticsIndexRoute
  '/shop/auctions': typeof dashboardsShopAuctionsIndexRoute
  '/shop/edit': typeof dashboardsShopEditIndexRoute
  '/shop/orders': typeof dashboardsShopOrdersIndexRoute
  '/shop/products': typeof dashboardsShopProductsIndexRoute
  '/shop/settings': typeof dashboardsShopSettingsIndexRoute
  '/categories': typeof rootmarketplaceCategoriesIndexRoute
  '/marketplace': typeof rootmarketplaceMarketplaceIndexRoute
  '/shops': typeof rootmarketplaceShopsIndexRoute
  '/dashboard/orders/$orderId/success': typeof dashboardsDashboardOrdersOrderIdSuccessRoute
  '/shop/products/$productId/edit': typeof dashboardsShopProductsProductIdEditRoute
  '/dashboard/orders/$orderId': typeof dashboardsDashboardOrdersOrderIdIndexRoute
  '/shop/products/new': typeof dashboardsShopProductsNewIndexRoute
  '/products/$productSlug': typeof rootmarketplaceProductsProductSlugIndexRoute
}
export interface FileRoutesByTo {
  '/test-upload': typeof TestUploadRoute
  '/': typeof rootIndexRoute
  '/auth': typeof AuthIndexRoute
  '/checkout': typeof CheckoutIndexRoute
  '/dashboard': typeof dashboardsDashboardIndexRoute
  '/shop': typeof dashboardsShopIndexRoute
  '/categories/$slug': typeof rootmarketplaceCategoriesSlugRoute
  '/shops/$slug': typeof rootmarketplaceShopsSlugRoute
  '/dashboard/bids': typeof dashboardsDashboardBidsIndexRoute
  '/dashboard/notifications': typeof dashboardsDashboardNotificationsIndexRoute
  '/dashboard/orders': typeof dashboardsDashboardOrdersIndexRoute
  '/dashboard/shop-setup': typeof dashboardsDashboardShopSetupIndexRoute
  '/shop/analytics': typeof dashboardsShopAnalyticsIndexRoute
  '/shop/auctions': typeof dashboardsShopAuctionsIndexRoute
  '/shop/edit': typeof dashboardsShopEditIndexRoute
  '/shop/orders': typeof dashboardsShopOrdersIndexRoute
  '/shop/products': typeof dashboardsShopProductsIndexRoute
  '/shop/settings': typeof dashboardsShopSettingsIndexRoute
  '/categories': typeof rootmarketplaceCategoriesIndexRoute
  '/marketplace': typeof rootmarketplaceMarketplaceIndexRoute
  '/shops': typeof rootmarketplaceShopsIndexRoute
  '/dashboard/orders/$orderId/success': typeof dashboardsDashboardOrdersOrderIdSuccessRoute
  '/shop/products/$productId/edit': typeof dashboardsShopProductsProductIdEditRoute
  '/dashboard/orders/$orderId': typeof dashboardsDashboardOrdersOrderIdIndexRoute
  '/shop/products/new': typeof dashboardsShopProductsNewIndexRoute
  '/products/$productSlug': typeof rootmarketplaceProductsProductSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(root)': typeof rootRouteRouteWithChildren
  '/test-upload': typeof TestUploadRoute
  '/(dashboards)/dashboard': typeof dashboardsDashboardRouteRouteWithChildren
  '/(dashboards)/shop': typeof dashboardsShopRouteRouteWithChildren
  '/(root)/(marketplace)': typeof rootmarketplaceRouteRouteWithChildren
  '/(root)/': typeof rootIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/checkout/': typeof CheckoutIndexRoute
  '/(dashboards)/dashboard/': typeof dashboardsDashboardIndexRoute
  '/(dashboards)/shop/': typeof dashboardsShopIndexRoute
  '/(root)/(marketplace)/categories/$slug': typeof rootmarketplaceCategoriesSlugRoute
  '/(root)/(marketplace)/shops/$slug': typeof rootmarketplaceShopsSlugRoute
  '/(dashboards)/dashboard/bids/': typeof dashboardsDashboardBidsIndexRoute
  '/(dashboards)/dashboard/notifications/': typeof dashboardsDashboardNotificationsIndexRoute
  '/(dashboards)/dashboard/orders/': typeof dashboardsDashboardOrdersIndexRoute
  '/(dashboards)/dashboard/shop-setup/': typeof dashboardsDashboardShopSetupIndexRoute
  '/(dashboards)/shop/analytics/': typeof dashboardsShopAnalyticsIndexRoute
  '/(dashboards)/shop/auctions/': typeof dashboardsShopAuctionsIndexRoute
  '/(dashboards)/shop/edit/': typeof dashboardsShopEditIndexRoute
  '/(dashboards)/shop/orders/': typeof dashboardsShopOrdersIndexRoute
  '/(dashboards)/shop/products/': typeof dashboardsShopProductsIndexRoute
  '/(dashboards)/shop/settings/': typeof dashboardsShopSettingsIndexRoute
  '/(root)/(marketplace)/categories/': typeof rootmarketplaceCategoriesIndexRoute
  '/(root)/(marketplace)/marketplace/': typeof rootmarketplaceMarketplaceIndexRoute
  '/(root)/(marketplace)/shops/': typeof rootmarketplaceShopsIndexRoute
  '/(dashboards)/dashboard/orders/$orderId/success': typeof dashboardsDashboardOrdersOrderIdSuccessRoute
  '/(dashboards)/shop/products/$productId/edit': typeof dashboardsShopProductsProductIdEditRoute
  '/(dashboards)/dashboard/orders/$orderId/': typeof dashboardsDashboardOrdersOrderIdIndexRoute
  '/(dashboards)/shop/products/new/': typeof dashboardsShopProductsNewIndexRoute
  '/(root)/(marketplace)/products/$productSlug/': typeof rootmarketplaceProductsProductSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/test-upload'
    | '/dashboard'
    | '/shop'
    | '/auth'
    | '/checkout'
    | '/dashboard/'
    | '/shop/'
    | '/categories/$slug'
    | '/shops/$slug'
    | '/dashboard/bids'
    | '/dashboard/notifications'
    | '/dashboard/orders'
    | '/dashboard/shop-setup'
    | '/shop/analytics'
    | '/shop/auctions'
    | '/shop/edit'
    | '/shop/orders'
    | '/shop/products'
    | '/shop/settings'
    | '/categories'
    | '/marketplace'
    | '/shops'
    | '/dashboard/orders/$orderId/success'
    | '/shop/products/$productId/edit'
    | '/dashboard/orders/$orderId'
    | '/shop/products/new'
    | '/products/$productSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/test-upload'
    | '/'
    | '/auth'
    | '/checkout'
    | '/dashboard'
    | '/shop'
    | '/categories/$slug'
    | '/shops/$slug'
    | '/dashboard/bids'
    | '/dashboard/notifications'
    | '/dashboard/orders'
    | '/dashboard/shop-setup'
    | '/shop/analytics'
    | '/shop/auctions'
    | '/shop/edit'
    | '/shop/orders'
    | '/shop/products'
    | '/shop/settings'
    | '/categories'
    | '/marketplace'
    | '/shops'
    | '/dashboard/orders/$orderId/success'
    | '/shop/products/$productId/edit'
    | '/dashboard/orders/$orderId'
    | '/shop/products/new'
    | '/products/$productSlug'
  id:
    | '__root__'
    | '/(root)'
    | '/test-upload'
    | '/(dashboards)/dashboard'
    | '/(dashboards)/shop'
    | '/(root)/(marketplace)'
    | '/(root)/'
    | '/auth/'
    | '/checkout/'
    | '/(dashboards)/dashboard/'
    | '/(dashboards)/shop/'
    | '/(root)/(marketplace)/categories/$slug'
    | '/(root)/(marketplace)/shops/$slug'
    | '/(dashboards)/dashboard/bids/'
    | '/(dashboards)/dashboard/notifications/'
    | '/(dashboards)/dashboard/orders/'
    | '/(dashboards)/dashboard/shop-setup/'
    | '/(dashboards)/shop/analytics/'
    | '/(dashboards)/shop/auctions/'
    | '/(dashboards)/shop/edit/'
    | '/(dashboards)/shop/orders/'
    | '/(dashboards)/shop/products/'
    | '/(dashboards)/shop/settings/'
    | '/(root)/(marketplace)/categories/'
    | '/(root)/(marketplace)/marketplace/'
    | '/(root)/(marketplace)/shops/'
    | '/(dashboards)/dashboard/orders/$orderId/success'
    | '/(dashboards)/shop/products/$productId/edit'
    | '/(dashboards)/dashboard/orders/$orderId/'
    | '/(dashboards)/shop/products/new/'
    | '/(root)/(marketplace)/products/$productSlug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  rootRouteRoute: typeof rootRouteRouteWithChildren
  TestUploadRoute: typeof TestUploadRoute
  dashboardsDashboardRouteRoute: typeof dashboardsDashboardRouteRouteWithChildren
  dashboardsShopRouteRoute: typeof dashboardsShopRouteRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
  CheckoutIndexRoute: typeof CheckoutIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test-upload': {
      id: '/test-upload'
      path: '/test-upload'
      fullPath: '/test-upload'
      preLoaderRoute: typeof TestUploadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(root)': {
      id: '/(root)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof rootRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(root)/': {
      id: '/(root)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof rootIndexRouteImport
      parentRoute: typeof rootRouteRoute
    }
    '/(root)/(marketplace)': {
      id: '/(root)/(marketplace)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof rootmarketplaceRouteRouteImport
      parentRoute: typeof rootRouteRoute
    }
    '/(dashboards)/shop': {
      id: '/(dashboards)/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof dashboardsShopRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboards)/dashboard': {
      id: '/(dashboards)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof dashboardsDashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboards)/shop/': {
      id: '/(dashboards)/shop/'
      path: '/'
      fullPath: '/shop/'
      preLoaderRoute: typeof dashboardsShopIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/dashboard/': {
      id: '/(dashboards)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof dashboardsDashboardIndexRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
    '/(root)/(marketplace)/shops/': {
      id: '/(root)/(marketplace)/shops/'
      path: '/shops'
      fullPath: '/shops'
      preLoaderRoute: typeof rootmarketplaceShopsIndexRouteImport
      parentRoute: typeof rootmarketplaceRouteRoute
    }
    '/(root)/(marketplace)/marketplace/': {
      id: '/(root)/(marketplace)/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof rootmarketplaceMarketplaceIndexRouteImport
      parentRoute: typeof rootmarketplaceRouteRoute
    }
    '/(root)/(marketplace)/categories/': {
      id: '/(root)/(marketplace)/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof rootmarketplaceCategoriesIndexRouteImport
      parentRoute: typeof rootmarketplaceRouteRoute
    }
    '/(dashboards)/shop/settings/': {
      id: '/(dashboards)/shop/settings/'
      path: '/settings'
      fullPath: '/shop/settings'
      preLoaderRoute: typeof dashboardsShopSettingsIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/shop/products/': {
      id: '/(dashboards)/shop/products/'
      path: '/products'
      fullPath: '/shop/products'
      preLoaderRoute: typeof dashboardsShopProductsIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/shop/orders/': {
      id: '/(dashboards)/shop/orders/'
      path: '/orders'
      fullPath: '/shop/orders'
      preLoaderRoute: typeof dashboardsShopOrdersIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/shop/edit/': {
      id: '/(dashboards)/shop/edit/'
      path: '/edit'
      fullPath: '/shop/edit'
      preLoaderRoute: typeof dashboardsShopEditIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/shop/auctions/': {
      id: '/(dashboards)/shop/auctions/'
      path: '/auctions'
      fullPath: '/shop/auctions'
      preLoaderRoute: typeof dashboardsShopAuctionsIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/shop/analytics/': {
      id: '/(dashboards)/shop/analytics/'
      path: '/analytics'
      fullPath: '/shop/analytics'
      preLoaderRoute: typeof dashboardsShopAnalyticsIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/dashboard/shop-setup/': {
      id: '/(dashboards)/dashboard/shop-setup/'
      path: '/shop-setup'
      fullPath: '/dashboard/shop-setup'
      preLoaderRoute: typeof dashboardsDashboardShopSetupIndexRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
    '/(dashboards)/dashboard/orders/': {
      id: '/(dashboards)/dashboard/orders/'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof dashboardsDashboardOrdersIndexRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
    '/(dashboards)/dashboard/notifications/': {
      id: '/(dashboards)/dashboard/notifications/'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof dashboardsDashboardNotificationsIndexRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
    '/(dashboards)/dashboard/bids/': {
      id: '/(dashboards)/dashboard/bids/'
      path: '/bids'
      fullPath: '/dashboard/bids'
      preLoaderRoute: typeof dashboardsDashboardBidsIndexRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
    '/(root)/(marketplace)/shops/$slug': {
      id: '/(root)/(marketplace)/shops/$slug'
      path: '/shops/$slug'
      fullPath: '/shops/$slug'
      preLoaderRoute: typeof rootmarketplaceShopsSlugRouteImport
      parentRoute: typeof rootmarketplaceRouteRoute
    }
    '/(root)/(marketplace)/categories/$slug': {
      id: '/(root)/(marketplace)/categories/$slug'
      path: '/categories/$slug'
      fullPath: '/categories/$slug'
      preLoaderRoute: typeof rootmarketplaceCategoriesSlugRouteImport
      parentRoute: typeof rootmarketplaceRouteRoute
    }
    '/(root)/(marketplace)/products/$productSlug/': {
      id: '/(root)/(marketplace)/products/$productSlug/'
      path: '/products/$productSlug'
      fullPath: '/products/$productSlug'
      preLoaderRoute: typeof rootmarketplaceProductsProductSlugIndexRouteImport
      parentRoute: typeof rootmarketplaceRouteRoute
    }
    '/(dashboards)/shop/products/new/': {
      id: '/(dashboards)/shop/products/new/'
      path: '/products/new'
      fullPath: '/shop/products/new'
      preLoaderRoute: typeof dashboardsShopProductsNewIndexRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/dashboard/orders/$orderId/': {
      id: '/(dashboards)/dashboard/orders/$orderId/'
      path: '/orders/$orderId'
      fullPath: '/dashboard/orders/$orderId'
      preLoaderRoute: typeof dashboardsDashboardOrdersOrderIdIndexRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
    '/(dashboards)/shop/products/$productId/edit': {
      id: '/(dashboards)/shop/products/$productId/edit'
      path: '/products/$productId/edit'
      fullPath: '/shop/products/$productId/edit'
      preLoaderRoute: typeof dashboardsShopProductsProductIdEditRouteImport
      parentRoute: typeof dashboardsShopRouteRoute
    }
    '/(dashboards)/dashboard/orders/$orderId/success': {
      id: '/(dashboards)/dashboard/orders/$orderId/success'
      path: '/orders/$orderId/success'
      fullPath: '/dashboard/orders/$orderId/success'
      preLoaderRoute: typeof dashboardsDashboardOrdersOrderIdSuccessRouteImport
      parentRoute: typeof dashboardsDashboardRouteRoute
    }
  }
}

interface rootmarketplaceRouteRouteChildren {
  rootmarketplaceCategoriesSlugRoute: typeof rootmarketplaceCategoriesSlugRoute
  rootmarketplaceShopsSlugRoute: typeof rootmarketplaceShopsSlugRoute
  rootmarketplaceCategoriesIndexRoute: typeof rootmarketplaceCategoriesIndexRoute
  rootmarketplaceMarketplaceIndexRoute: typeof rootmarketplaceMarketplaceIndexRoute
  rootmarketplaceShopsIndexRoute: typeof rootmarketplaceShopsIndexRoute
  rootmarketplaceProductsProductSlugIndexRoute: typeof rootmarketplaceProductsProductSlugIndexRoute
}

const rootmarketplaceRouteRouteChildren: rootmarketplaceRouteRouteChildren = {
  rootmarketplaceCategoriesSlugRoute: rootmarketplaceCategoriesSlugRoute,
  rootmarketplaceShopsSlugRoute: rootmarketplaceShopsSlugRoute,
  rootmarketplaceCategoriesIndexRoute: rootmarketplaceCategoriesIndexRoute,
  rootmarketplaceMarketplaceIndexRoute: rootmarketplaceMarketplaceIndexRoute,
  rootmarketplaceShopsIndexRoute: rootmarketplaceShopsIndexRoute,
  rootmarketplaceProductsProductSlugIndexRoute:
    rootmarketplaceProductsProductSlugIndexRoute,
}

const rootmarketplaceRouteRouteWithChildren =
  rootmarketplaceRouteRoute._addFileChildren(rootmarketplaceRouteRouteChildren)

interface rootRouteRouteChildren {
  rootmarketplaceRouteRoute: typeof rootmarketplaceRouteRouteWithChildren
  rootIndexRoute: typeof rootIndexRoute
}

const rootRouteRouteChildren: rootRouteRouteChildren = {
  rootmarketplaceRouteRoute: rootmarketplaceRouteRouteWithChildren,
  rootIndexRoute: rootIndexRoute,
}

const rootRouteRouteWithChildren = rootRouteRoute._addFileChildren(
  rootRouteRouteChildren,
)

interface dashboardsDashboardRouteRouteChildren {
  dashboardsDashboardIndexRoute: typeof dashboardsDashboardIndexRoute
  dashboardsDashboardBidsIndexRoute: typeof dashboardsDashboardBidsIndexRoute
  dashboardsDashboardNotificationsIndexRoute: typeof dashboardsDashboardNotificationsIndexRoute
  dashboardsDashboardOrdersIndexRoute: typeof dashboardsDashboardOrdersIndexRoute
  dashboardsDashboardShopSetupIndexRoute: typeof dashboardsDashboardShopSetupIndexRoute
  dashboardsDashboardOrdersOrderIdSuccessRoute: typeof dashboardsDashboardOrdersOrderIdSuccessRoute
  dashboardsDashboardOrdersOrderIdIndexRoute: typeof dashboardsDashboardOrdersOrderIdIndexRoute
}

const dashboardsDashboardRouteRouteChildren: dashboardsDashboardRouteRouteChildren =
  {
    dashboardsDashboardIndexRoute: dashboardsDashboardIndexRoute,
    dashboardsDashboardBidsIndexRoute: dashboardsDashboardBidsIndexRoute,
    dashboardsDashboardNotificationsIndexRoute:
      dashboardsDashboardNotificationsIndexRoute,
    dashboardsDashboardOrdersIndexRoute: dashboardsDashboardOrdersIndexRoute,
    dashboardsDashboardShopSetupIndexRoute:
      dashboardsDashboardShopSetupIndexRoute,
    dashboardsDashboardOrdersOrderIdSuccessRoute:
      dashboardsDashboardOrdersOrderIdSuccessRoute,
    dashboardsDashboardOrdersOrderIdIndexRoute:
      dashboardsDashboardOrdersOrderIdIndexRoute,
  }

const dashboardsDashboardRouteRouteWithChildren =
  dashboardsDashboardRouteRoute._addFileChildren(
    dashboardsDashboardRouteRouteChildren,
  )

interface dashboardsShopRouteRouteChildren {
  dashboardsShopIndexRoute: typeof dashboardsShopIndexRoute
  dashboardsShopAnalyticsIndexRoute: typeof dashboardsShopAnalyticsIndexRoute
  dashboardsShopAuctionsIndexRoute: typeof dashboardsShopAuctionsIndexRoute
  dashboardsShopEditIndexRoute: typeof dashboardsShopEditIndexRoute
  dashboardsShopOrdersIndexRoute: typeof dashboardsShopOrdersIndexRoute
  dashboardsShopProductsIndexRoute: typeof dashboardsShopProductsIndexRoute
  dashboardsShopSettingsIndexRoute: typeof dashboardsShopSettingsIndexRoute
  dashboardsShopProductsProductIdEditRoute: typeof dashboardsShopProductsProductIdEditRoute
  dashboardsShopProductsNewIndexRoute: typeof dashboardsShopProductsNewIndexRoute
}

const dashboardsShopRouteRouteChildren: dashboardsShopRouteRouteChildren = {
  dashboardsShopIndexRoute: dashboardsShopIndexRoute,
  dashboardsShopAnalyticsIndexRoute: dashboardsShopAnalyticsIndexRoute,
  dashboardsShopAuctionsIndexRoute: dashboardsShopAuctionsIndexRoute,
  dashboardsShopEditIndexRoute: dashboardsShopEditIndexRoute,
  dashboardsShopOrdersIndexRoute: dashboardsShopOrdersIndexRoute,
  dashboardsShopProductsIndexRoute: dashboardsShopProductsIndexRoute,
  dashboardsShopSettingsIndexRoute: dashboardsShopSettingsIndexRoute,
  dashboardsShopProductsProductIdEditRoute:
    dashboardsShopProductsProductIdEditRoute,
  dashboardsShopProductsNewIndexRoute: dashboardsShopProductsNewIndexRoute,
}

const dashboardsShopRouteRouteWithChildren =
  dashboardsShopRouteRoute._addFileChildren(dashboardsShopRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  rootRouteRoute: rootRouteRouteWithChildren,
  TestUploadRoute: TestUploadRoute,
  dashboardsDashboardRouteRoute: dashboardsDashboardRouteRouteWithChildren,
  dashboardsShopRouteRoute: dashboardsShopRouteRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
  CheckoutIndexRoute: CheckoutIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
